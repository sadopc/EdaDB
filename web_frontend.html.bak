<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SQL-like Veritabanƒ± Motoru - Web Interface</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
            color: #333;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 12px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .main-content {
            padding: 40px;
        }

        .query-section {
            margin-bottom: 30px;
        }

        .query-section h2 {
            color: #333;
            margin-bottom: 15px;
            font-size: 1.8rem;
        }

        .query-input {
            width: 100%;
            height: 120px;
            border: 2px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            font-size: 16px;
            font-family: 'Courier New', monospace;
            resize: vertical;
            transition: border-color 0.3s;
        }

        .query-input:focus {
            outline: none;
            border-color: #4CAF50;
            box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.2);
        }

        .button-group {
            margin-top: 15px;
            display: flex;
            gap: 10px;
        }

        .execute-btn {
            background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);
            color: white;
            border: none;
            padding: 12px 30px;
            font-size: 16px;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s;
            text-transform: uppercase;
            font-weight: 600;
            letter-spacing: 1px;
        }

        .execute-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(76, 175, 80, 0.3);
        }

        .execute-btn:disabled {
            background: #ccc;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .clear-btn {
            background: linear-gradient(135deg, #ff7675 0%, #fd79a8 100%);
            color: white;
            border: none;
            padding: 12px 30px;
            font-size: 16px;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s;
            text-transform: uppercase;
            font-weight: 600;
            letter-spacing: 1px;
        }

        .clear-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(255, 118, 117, 0.3);
        }

        .examples {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
        }

        .examples h3 {
            color: #333;
            margin-bottom: 10px;
        }

        .example-queries {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 10px;
        }

        .example-query {
            background: white;
            padding: 10px;
            border-radius: 4px;
            border: 1px solid #ddd;
            cursor: pointer;
            transition: all 0.3s;
            font-family: 'Courier New', monospace;
            font-size: 14px;
        }

        .example-query:hover {
            background: #e8f5e8;
            border-color: #4CAF50;
        }

        .results-section {
            margin-top: 30px;
        }

        .results-section h2 {
            color: #333;
            margin-bottom: 15px;
            font-size: 1.8rem;
        }

        .loading {
            text-align: center;
            padding: 20px;
            color: #666;
        }

        .loading::after {
            content: '';
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 2px solid #ddd;
            border-top: 2px solid #4CAF50;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-left: 10px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .error {
            background: #ffebee;
            color: #c62828;
            padding: 15px;
            border-radius: 6px;
            border-left: 4px solid #f44336;
            margin-bottom: 20px;
        }

        .success {
            background: #e8f5e8;
            color: #2e7d32;
            padding: 15px;
            border-radius: 6px;
            border-left: 4px solid #4CAF50;
            margin-bottom: 20px;
        }

        .results-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .results-table th,
        .results-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .results-table th {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .results-table tr:hover {
            background: #f5f5f5;
        }

        .results-table td {
            font-family: 'Courier New', monospace;
        }

        .no-results {
            text-align: center;
            padding: 40px;
            color: #666;
            font-style: italic;
        }

        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
        }

        .stat-card h3 {
            margin-bottom: 10px;
            font-size: 1.2rem;
        }

        .stat-card p {
            font-size: 2rem;
            font-weight: bold;
        }

        @media (max-width: 768px) {
            .container {
                margin: 10px;
            }
            
            .main-content {
                padding: 20px;
            }
            
            .header h1 {
                font-size: 2rem;
            }
            
            .button-group {
                flex-direction: column;
            }
            
            .execute-btn, .clear-btn {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üöÄ SQL-like Veritabanƒ± Motoru</h1>
            <p>Rust ile yazƒ±lmƒ±≈ü, modern ve hƒ±zlƒ± veritabanƒ± sistemi</p>
        </div>

        <div class="main-content">
            <div class="query-section">
                <h2>üìù SQL Sorgusu</h2>
                <textarea 
                    id="sqlQuery" 
                    class="query-input" 
                    placeholder="SELECT * FROM users&#10;&#10;√ñrnek sorgularƒ±nƒ±zƒ± buraya yazƒ±n..."
                ></textarea>
                
                <div class="button-group">
                    <button id="executeBtn" class="execute-btn">‚ñ∂Ô∏è √áalƒ±≈ütƒ±r</button>
                    <button id="clearBtn" class="clear-btn">üóëÔ∏è Temizle</button>
                </div>

                <div class="examples">
                    <h3>üí° √ñrnek Sorgular</h3>
                    <div class="example-queries">
                        <div class="example-query" onclick="setQuery('SELECT * FROM users')">
                            SELECT * FROM users
                        </div>
                        <div class="example-query" onclick="setQuery('SELECT * FROM products')">
                            SELECT * FROM products
                        </div>
                        <div class="example-query" onclick="setQuery('INSERT INTO users VALUES (3, &quot;Mehmet&quot;, &quot;mehmet@example.com&quot;)')">
                            INSERT INTO users VALUES (3, "Mehmet", "mehmet@example.com")
                        </div>
                        <div class="example-query" onclick="setQuery('CREATE TABLE orders (id INT, user_id INT, total TEXT)')">
                            CREATE TABLE orders (id INT, user_id INT, total TEXT)
                        </div>
                        <div class="example-query" onclick="setQuery('UPDATE users SET email = &quot;yeni@email.com&quot; WHERE id = 1')">
                            UPDATE users SET email = "yeni@email.com" WHERE id = 1
                        </div>
                        <div class="example-query" onclick="setQuery('DELETE FROM users WHERE id = 2')">
                            DELETE FROM users WHERE id = 2
                        </div>
                    </div>
                </div>
            </div>

            <div class="results-section">
                <h2>üìä Sonu√ßlar</h2>
                <div id="results">
                    <div class="no-results">
                        Hen√ºz sorgu √ßalƒ±≈ütƒ±rƒ±lmadƒ±. Yukarƒ±daki alana SQL sorgunuzu yazƒ±p "√áalƒ±≈ütƒ±r" butonuna tƒ±klayƒ±n.
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        const API_URL = 'http://localhost:3000';
        let isLoading = false;

        // DOM elementleri
        const sqlQuery = document.getElementById('sqlQuery');
        const executeBtn = document.getElementById('executeBtn');
        const clearBtn = document.getElementById('clearBtn');
        const results = document.getElementById('results');

        // Event listeners
        executeBtn.addEventListener('click', executeQuery);
        clearBtn.addEventListener('click', clearQuery);
        
        // Enter ile sorgu √ßalƒ±≈ütƒ±rma (Ctrl+Enter)
        sqlQuery.addEventListener('keydown', (e) => {
            if (e.ctrlKey && e.key === 'Enter') {
                executeQuery();
            }
        });

        // Sorgu √ßalƒ±≈ütƒ±r
        async function executeQuery() {
            const query = sqlQuery.value.trim();
            
            if (!query) {
                showError('L√ºtfen bir SQL sorgusu girin.');
                return;
            }

            if (isLoading) {
                return;
            }

            setLoading(true);
            
            try {
                const response = await fetch(`${API_URL}/query`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ sql: query })
                });

                const data = await response.json();
                
                if (data.success) {
                    displayResults(data.result, query);
                } else {
                    showError(data.error || 'Bilinmeyen hata olu≈ütu.');
                }
            } catch (error) {
                showError(`Baƒülantƒ± hatasƒ±: ${error.message}`);
            } finally {
                setLoading(false);
            }
        }

        // Sonu√ßlarƒ± g√∂ster
        function displayResults(result, query) {
            if (!result) {
                results.innerHTML = `
                    <div class="success">
                        ‚úÖ Sorgu ba≈üarƒ±yla √ßalƒ±≈ütƒ±rƒ±ldƒ±: <code>${escapeHtml(query)}</code>
                    </div>
                `;
                return;
            }

            let html = `
                <div class="success">
                    ‚úÖ Sorgu ba≈üarƒ±yla √ßalƒ±≈ütƒ±rƒ±ldƒ±: <code>${escapeHtml(query)}</code>
                </div>
            `;

            // Tablo verilerini g√∂ster
            if (result.data && result.data.length > 0) {
                html += `<table class="results-table">`;
                
                // Ba≈ülƒ±klarƒ± al
                const headers = Object.keys(result.data[0]);
                html += `<thead><tr>`;
                headers.forEach(header => {
                    html += `<th>${escapeHtml(header)}</th>`;
                });
                html += `</tr></thead>`;

                // Verileri g√∂ster
                html += `<tbody>`;
                result.data.forEach(row => {
                    html += `<tr>`;
                    headers.forEach(header => {
                        const value = row[header];
                        html += `<td>${escapeHtml(String(value))}</td>`;
                    });
                    html += `</tr>`;
                });
                html += `</tbody></table>`;

                // ƒ∞statistikler
                html += `
                    <div class="stats">
                        <div class="stat-card">
                            <h3>Toplam Kayƒ±t</h3>
                            <p>${result.data.length}</p>
                        </div>
                        <div class="stat-card">
                            <h3>Kolon Sayƒ±sƒ±</h3>
                            <p>${headers.length}</p>
                        </div>
                    </div>
                `;
            } else {
                html += `<div class="no-results">Sonu√ß bulunamadƒ±.</div>`;
            }

            results.innerHTML = html;
        }

        // Hata g√∂ster
        function showError(message) {
            results.innerHTML = `
                <div class="error">
                    ‚ùå <strong>Hata:</strong> ${escapeHtml(message)}
                </div>
            `;
        }

        // Loading durumu
        function setLoading(loading) {
            isLoading = loading;
            executeBtn.disabled = loading;
            
            if (loading) {
                executeBtn.textContent = '‚è≥ √áalƒ±≈ütƒ±rƒ±lƒ±yor...';
                results.innerHTML = '<div class="loading">Sorgu √ßalƒ±≈ütƒ±rƒ±lƒ±yor...</div>';
            } else {
                executeBtn.textContent = '‚ñ∂Ô∏è √áalƒ±≈ütƒ±r';
            }
        }

        // Sorguyu temizle
        function clearQuery() {
            sqlQuery.value = '';
            results.innerHTML = `
                <div class="no-results">
                    Hen√ºz sorgu √ßalƒ±≈ütƒ±rƒ±lmadƒ±. Yukarƒ±daki alana SQL sorgunuzu yazƒ±p "√áalƒ±≈ütƒ±r" butonuna tƒ±klayƒ±n.
                </div>
            `;
            sqlQuery.focus();
        }

        // √ñrnek sorgu set et
        function setQuery(query) {
            sqlQuery.value = query;
            sqlQuery.focus();
        }

        // HTML escape
        function escapeHtml(text) {
            const map = {
                '&': '&amp;',
                '<': '&lt;',
                '>': '&gt;',
                '"': '&quot;',
                "'": '&#039;'
            };
            return text.replace(/[&<>"']/g, (m) => map[m]);
        }

        // Sayfa y√ºklendiƒüinde fokus
        window.addEventListener('load', () => {
            sqlQuery.focus();
        });
    </script>
</body>
</html> 